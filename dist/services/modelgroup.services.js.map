{"version":3,"sources":["../../src/services/modelgroup.services.ts"],"sourcesContent":["import { CreateModelGroup } from \"@/dtos/modelgroup.dto\";\r\nimport { HttpException } from \"@/exceptions/HttpException\";\r\nimport { Article } from \"@/interfaces/article.interface\";\r\nimport { ModelGroup } from \"@/interfaces/modelgroup.interface\";\r\nimport { isEmpty } from \"@/utils/util\";\r\nimport { ModelGroupModel } from \"@/models/modelgroup.model\";\r\nimport { logger } from \"@/utils/logger\";\r\nimport { BlockList } from \"net\";\r\nimport {json} from 'envalid';\r\n\r\n\r\nexport class ModelGroupServices {\r\n\r\n    public async findAllModelGroup() {\r\n        var model = new ModelGroupModel();\r\n\r\n        var items = model.readAllModelGroup();\r\n        if (!items) throw new HttpException(409, \"content not found\");\r\n        return items;\r\n    }\r\n\r\n    public async findModelGroupByAsGrp(mgGrp: string) {\r\n        var model = new ModelGroupModel();\r\n\r\n        var items = model.readModelGroupbyId(mgGrp);\r\n        if (!items) throw new HttpException(409, \"content not found\");\r\n        return items;\r\n    }\r\n\r\n    public async createModelGroup(modelgroup: ModelGroup) {\r\n        var model = new ModelGroupModel();\r\n\r\n        var items = model.createModelGroup(modelgroup);\r\n        if (!items) throw new HttpException(409, \"content not found\");\r\n        return items;\r\n    }\r\n\r\n    public async update(modelgroup: ModelGroup) {\r\n        var model = new ModelGroupModel();\r\n\r\n        var items = model.updateModelGroup(modelgroup);\r\n        if (!items) throw new HttpException(409, \"content not found\");\r\n        return items;\r\n    }\r\n\r\n    public async delete(mgGrp: string) {\r\n        var model = new ModelGroupModel();\r\n\r\n        var items = model.deleteArticle(mgGrp);\r\n        if (!items) throw new HttpException(409, \"content not found\");\r\n        return items;\r\n    }\r\n\r\n}"],"names":["ModelGroupServices","findAllModelGroup","model","ModelGroupModel","items","readAllModelGroup","HttpException","findModelGroupByAsGrp","mgGrp","readModelGroupbyId","createModelGroup","modelgroup","update","updateModelGroup","delete","deleteArticle"],"mappings":";;;;+BAWaA;;aAAAA;;+BAViB;iCAIE;AAMzB,IAAA,AAAMA,qBAAN,MAAMA;IAET,MAAaC,oBAAoB;QAC7B,IAAIC,QAAQ,IAAIC,gCAAe;QAE/B,IAAIC,QAAQF,MAAMG,iBAAiB;QACnC,IAAI,CAACD,OAAO,MAAM,IAAIE,4BAAa,CAAC,KAAK,qBAAqB;QAC9D,OAAOF;IACX;IAEA,MAAaG,sBAAsBC,KAAa,EAAE;QAC9C,IAAIN,QAAQ,IAAIC,gCAAe;QAE/B,IAAIC,QAAQF,MAAMO,kBAAkB,CAACD;QACrC,IAAI,CAACJ,OAAO,MAAM,IAAIE,4BAAa,CAAC,KAAK,qBAAqB;QAC9D,OAAOF;IACX;IAEA,MAAaM,iBAAiBC,UAAsB,EAAE;QAClD,IAAIT,QAAQ,IAAIC,gCAAe;QAE/B,IAAIC,QAAQF,MAAMQ,gBAAgB,CAACC;QACnC,IAAI,CAACP,OAAO,MAAM,IAAIE,4BAAa,CAAC,KAAK,qBAAqB;QAC9D,OAAOF;IACX;IAEA,MAAaQ,OAAOD,UAAsB,EAAE;QACxC,IAAIT,QAAQ,IAAIC,gCAAe;QAE/B,IAAIC,QAAQF,MAAMW,gBAAgB,CAACF;QACnC,IAAI,CAACP,OAAO,MAAM,IAAIE,4BAAa,CAAC,KAAK,qBAAqB;QAC9D,OAAOF;IACX;IAEA,MAAaU,OAAON,KAAa,EAAE;QAC/B,IAAIN,QAAQ,IAAIC,gCAAe;QAE/B,IAAIC,QAAQF,MAAMa,aAAa,CAACP;QAChC,IAAI,CAACJ,OAAO,MAAM,IAAIE,4BAAa,CAAC,KAAK,qBAAqB;QAC9D,OAAOF;IACX;AAEJ"}