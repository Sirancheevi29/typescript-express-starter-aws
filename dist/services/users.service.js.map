{"version":3,"sources":["../../src/services/users.service.ts"],"sourcesContent":["import { hash } from 'bcrypt';\nimport { CreateUserDto } from '@dtos/users.dto';\nimport { HttpException } from '@exceptions/HttpException';\nimport { User } from '@interfaces/users.interface';\nimport userModel from '@models/users.model';\nimport { isEmpty } from '@utils/util';\n\nclass UserService {\n  public users = userModel;\n\n  public async findAllUser(): Promise<User[]> {\n    const users: User[] = this.users;\n    return users;\n  }\n\n  public async findUserById(userId: number): Promise<User> {\n    const findUser: User = this.users.find(user => user.id === userId);\n    if (!findUser) throw new HttpException(409, \"User doesn't exist\");\n\n    return findUser;\n  }\n\n  public async createUser(userData: CreateUserDto): Promise<User> {\n    if (isEmpty(userData)) throw new HttpException(400, \"userData is empty\");\n\n    const findUser: User = this.users.find(user => user.email === userData.email);\n    if (findUser) throw new HttpException(409, `This email ${userData.email} already exists`);\n\n    const hashedPassword = await hash(userData.password, 10);\n    const createUserData: User = { id: this.users.length + 1, ...userData, password: hashedPassword };\n    this.users = [...this.users, createUserData];\n\n    return createUserData;\n  }\n\n  public async updateUser(userId: number, userData: CreateUserDto): Promise<User[]> {\n    if (isEmpty(userData)) throw new HttpException(400, \"userData is empty\");\n\n    const findUser: User = this.users.find(user => user.id === userId);\n    if (!findUser) throw new HttpException(409, \"User doesn't exist\");\n\n    const hashedPassword = await hash(userData.password, 10);\n    const updateUserData: User[] = this.users.map((user: User) => {\n      if (user.id === findUser.id) user = { id: userId, ...userData, password: hashedPassword };\n      return user;\n    });\n\n    return updateUserData;\n  }\n\n  public async deleteUser(userId: number): Promise<User[]> {\n    const findUser: User = this.users.find(user => user.id === userId);\n    if (!findUser) throw new HttpException(409, \"User doesn't exist\");\n\n    const deleteUserData: User[] = this.users.filter(user => user.id !== findUser.id);\n    return deleteUserData;\n  }\n}\n\nexport default UserService;\n"],"names":["UserService","findAllUser","users","findUserById","userId","findUser","find","user","id","HttpException","createUser","userData","isEmpty","email","hashedPassword","hash","password","createUserData","length","updateUser","updateUserData","map","deleteUser","deleteUserData","filter","userModel"],"mappings":";;;;+BA2DA;;aAAA;;wBA3DqB;+BAES;mDAER;sBACE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAExB,IAAA,AAAMA,cAAN,MAAMA;IAGJ,MAAaC,cAA+B;QAC1C,MAAMC,QAAgB,IAAI,CAACA,KAAK;QAChC,OAAOA;IACT;IAEA,MAAaC,aAAaC,MAAc,EAAiB;QACvD,MAAMC,WAAiB,IAAI,CAACH,KAAK,CAACI,IAAI,CAACC,CAAAA,OAAQA,KAAKC,EAAE,KAAKJ;QAC3D,IAAI,CAACC,UAAU,MAAM,IAAII,4BAAa,CAAC,KAAK,sBAAsB;QAElE,OAAOJ;IACT;IAEA,MAAaK,WAAWC,QAAuB,EAAiB;QAC9D,IAAIC,IAAAA,aAAO,EAACD,WAAW,MAAM,IAAIF,4BAAa,CAAC,KAAK,qBAAqB;QAEzE,MAAMJ,WAAiB,IAAI,CAACH,KAAK,CAACI,IAAI,CAACC,CAAAA,OAAQA,KAAKM,KAAK,KAAKF,SAASE,KAAK;QAC5E,IAAIR,UAAU,MAAM,IAAII,4BAAa,CAAC,KAAK,CAAC,WAAW,EAAEE,SAASE,KAAK,CAAC,eAAe,CAAC,EAAE;QAE1F,MAAMC,iBAAiB,MAAMC,IAAAA,YAAI,EAACJ,SAASK,QAAQ,EAAE;QACrD,MAAMC,iBAAuB;YAAET,IAAI,IAAI,CAACN,KAAK,CAACgB,MAAM,GAAG;WAAMP;YAAUK,UAAUF;;QACjF,IAAI,CAACZ,KAAK,GAAG;eAAI,IAAI,CAACA,KAAK;YAAEe;SAAe;QAE5C,OAAOA;IACT;IAEA,MAAaE,WAAWf,MAAc,EAAEO,QAAuB,EAAmB;QAChF,IAAIC,IAAAA,aAAO,EAACD,WAAW,MAAM,IAAIF,4BAAa,CAAC,KAAK,qBAAqB;QAEzE,MAAMJ,WAAiB,IAAI,CAACH,KAAK,CAACI,IAAI,CAACC,CAAAA,OAAQA,KAAKC,EAAE,KAAKJ;QAC3D,IAAI,CAACC,UAAU,MAAM,IAAII,4BAAa,CAAC,KAAK,sBAAsB;QAElE,MAAMK,iBAAiB,MAAMC,IAAAA,YAAI,EAACJ,SAASK,QAAQ,EAAE;QACrD,MAAMI,iBAAyB,IAAI,CAAClB,KAAK,CAACmB,GAAG,CAAC,CAACd,OAAe;YAC5D,IAAIA,KAAKC,EAAE,KAAKH,SAASG,EAAE,EAAED,OAAO;gBAAEC,IAAIJ;eAAWO;gBAAUK,UAAUF;;YACzE,OAAOP;QACT;QAEA,OAAOa;IACT;IAEA,MAAaE,WAAWlB,MAAc,EAAmB;QACvD,MAAMC,WAAiB,IAAI,CAACH,KAAK,CAACI,IAAI,CAACC,CAAAA,OAAQA,KAAKC,EAAE,KAAKJ;QAC3D,IAAI,CAACC,UAAU,MAAM,IAAII,4BAAa,CAAC,KAAK,sBAAsB;QAElE,MAAMc,iBAAyB,IAAI,CAACrB,KAAK,CAACsB,MAAM,CAACjB,CAAAA,OAAQA,KAAKC,EAAE,KAAKH,SAASG,EAAE;QAChF,OAAOe;IACT;;aAhDOrB,QAAQuB,mBAAS;;AAiD1B;MAEA,WAAezB"}