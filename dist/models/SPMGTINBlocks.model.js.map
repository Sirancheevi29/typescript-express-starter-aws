{"version":3,"sources":["../../src/models/SPMGTINBlocks.model.ts"],"sourcesContent":["import { SPMGTINBlocks } from '@interfaces/SPMGTINBlocks.interface';\r\nimport { ScanCommand, GetItemCommand, PutItemCommand, UpdateItemCommand, AttributeValue, DeleteItemCommand } from \"@aws-sdk/client-dynamodb\";\r\nimport { AWSDBClient, AWSTables } from '@/aws';\r\nimport { logger } from '@utils/logger';\r\nimport { marshall, unmarshall } from \"@aws-sdk/util-dynamodb\";\r\nimport { UpdateCommand } from '@aws-sdk/lib-dynamodb';\r\n\r\n\r\n\r\nexport class SPMTGTINBlocksModel {\r\n\r\n    readAllSPMTGTINBlocksModel = async () => {\r\n\r\n        const params = {\r\n            TableName: AWSTables.SPMGTINBlocks,\r\n            Key: marshall({\r\n                HashKey: \"hashKey\",\r\n            }),\r\n        }\r\n\r\n        try {\r\n            const data = await AWSDBClient.send(new ScanCommand(params));\r\n\r\n            let content = [];\r\n\r\n            data.Items.forEach(i => {\r\n                content.push(unmarshall(i))\r\n            });\r\n\r\n            return { content }\r\n\r\n        } catch (error) {\r\n            logger.error(error);\r\n            return { success: false, data: null }\r\n        }\r\n\r\n    }\r\n\r\n    readSPMGTINBlocksById = async (BlockId: string) => {\r\n        const params = {\r\n            TableName: AWSTables.SPMGTINBlocks,\r\n            Key: {\r\n                blockId: { S: `${BlockId}` }\r\n            }\r\n        }\r\n        try {\r\n            const data = await AWSDBClient.send(new GetItemCommand(params));\r\n            console.log(data.Item);\r\n\r\n            const content = unmarshall(data.Item)\r\n            // let Blocks : SPMGTINBlocks =  JSON.parse(JSON.stringify(content));\r\n            console.log(content);\r\n\r\n            return content;\r\n        }\r\n        catch (error) {\r\n            logger.error(error);\r\n            return { success: false, data: null }\r\n        }\r\n    }\r\n\r\n    createSPMGTINBlock = async (blocks) => {\r\n       \r\n        const dbBlocks: Record<string, AttributeValue> = marshall(blocks);\r\n        const params = {\r\n            TableName: AWSTables.SPMGTINBlocks.toString(),\r\n            Item: dbBlocks\r\n        }\r\n\r\n        try {\r\n            const data = await AWSDBClient.send(new PutItemCommand(params));\r\n            return  {success: true, data: data.$metadata};\r\n        }\r\n        catch (error) {\r\n            logger.error(error);\r\n            return { success: false, data: null }\r\n        }\r\n\r\n    }\r\n\r\n    updateSPMGTINBlock = async (block: SPMGTINBlocks) => {\r\n\r\n        const dbBlocks: Record<string, AttributeValue> = marshall(block);\r\n        const key = {\r\n            blockId: { S: block.blockId }\r\n        };\r\n\r\n        const updateExpression = `SET #blockExplosion = :blockExplosion,\r\n        #relatedGS1Organization = :relatedGS1Organization,\r\n        #updateDate = :updateDate,\r\n        #barcodeAssignee = :barcodeAssignee,\r\n        #blockExplosionDate = :blockExplosionDate,\r\n        #countryCode = :countryCode,\r\n        #ean128Receiver = :ean128Receiver,\r\n        #blockUsedForEAN128Assignment = :blockUsedForEAN128Assignment,\r\n        #gtinBlock = :gtinBlock, \r\n        #blockUsedForGLNAssignment  = :blockUsedForGLNAssignment,\r\n        #gs1ContactEmailAddress = :gs1ContactEmailAddress,\r\n        #parentGLN  = :parentGLN,\r\n        #createDate = :createDate,\r\n        #iamBarcodePoolId = :iamBarcodePoolId,\r\n        #comment = :comment,\r\n        #adidasGroupContact = :adidasGroupContact,\r\n        #ean128Contact = :ean128Contact,\r\n        #blockPurchaseDate = :blockPurchaseDate,\r\n        #gtinType = :gtinType`;\r\n\r\n        const expressionAttributeNames = {\r\n            \"#blockExplosion\": \"blockExplosion\",\r\n            \"#relatedGS1Organization\": \"relatedGS1Organization\",\r\n            \"#updateDate\": \"updateDate\",\r\n            \"#barcodeAssignee\": \"barcodeAssignee\",\r\n            \"#blockExplosionDate\": \"blockExplosionDate\",\r\n            \"#countryCode\": \"countryCode\",\r\n            \"#ean128Receiver\": \"ean128Receiver\",\r\n            \"#blockUsedForEAN128Assignment\": \"blockUsedForEAN128Assignment\",\r\n            \"#gtinBlock\": \"gtinBlock\",\r\n            \"#blockUsedForGLNAssignment\": \"blockUsedForGLNAssignment\",\r\n            \"#gs1ContactEmailAddress\": \"gs1ContactEmailAddress\",\r\n            \"#parentGLN\": \"parentGLN\",\r\n            \"#createDate\": \"createDate\",\r\n            \"#iamBarcodePoolId\": \"iamBarcodePoolId\",\r\n            \"#comment\": \"comment\",\r\n            \"#adidasGroupContact\": \"adidasGroupContact\",\r\n            \"#ean128Contact\": \"ean128Contact\",\r\n            \"#blockPurchaseDate\": \"blockPurchaseDate\",\r\n            \"#gtinType\": \"gtinType\"\r\n        };\r\n\r\n        const expressionAttributeValues = {\r\n            \":blockExplosion\":  block.blockExplosion ,\r\n            \":relatedGS1Organization\": block.relatedGS1Organization,\r\n            \":updateDate\":  block.updateDate,\r\n            \":barcodeAssignee\":block.barcodeAssignee,\r\n            \":blockExplosionDate\": block.blockExplosionDate,\r\n            \":countryCode\": block.countryCode ,\r\n            \":ean128Receiver\":  block.ean128Receiver ,\r\n            \":blockUsedForEAN128Assignment\":  block.blockUsedForEAN128Assignment ,\r\n            \":gtinBlock\":block.gtinBlock ,\r\n            \":blockUsedForGLNAssignment\": block.blockUsedForGLNAssignment ,\r\n            \":gs1ContactEmailAddress\":  block.gs1ContactEmailAddress ,\r\n            \":parentGLN\":  block.parentGLN ,\r\n            \":createDate\":  block.createDate ,\r\n            \":iamBarcodePoolId\":  block.iamBarcodePoolId ,\r\n            \":comment\":  block.comment ,\r\n            \":adidasGroupContact\":  block.adidasGroupContact ,\r\n            \":ean128Contact\":  block.ean128Contact ,\r\n            \":blockPurchaseDate\":  block.blockPurchaseDate,\r\n            \":gtinType\":  block.gtinType \r\n        };\r\n\r\n        const params = {\r\n            TableName: AWSTables.SPMGTINBlocks,\r\n            Key: {\r\n                blockId: block.blockId\r\n            },\r\n            ExpressionAttributeNames: expressionAttributeNames,\r\n            UpdateExpression: updateExpression,\r\n            ExpressionAttributeValues: expressionAttributeValues,\r\n            ReturnValues: \"UPDATED_NEW\"\r\n          };\r\n\r\n        try {\r\n            const data = await AWSDBClient.send(new UpdateCommand(params));\r\n            return {success: true, data: data.$metadata};\r\n        }\r\n        catch (error) {\r\n            logger.error(error);\r\n            return { success: false, data: null }\r\n        }\r\n    }\r\n\r\n    deleteSPMGTINBlock = async(blockId: string) => {\r\n        const params = {\r\n            TableName: AWSTables.SPMGTINBlocks,\r\n            Key: {\r\n                blockId: { \"S\" : blockId}\r\n            }\r\n        };\r\n\r\n        try {\r\n            const resData = await AWSDBClient.send(new DeleteItemCommand(params));\r\n            return resData.$metadata;\r\n        }\r\n        catch (error) {\r\n            logger.error(error);\r\n            return {success: false, data:null}\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n"],"names":["SPMTGTINBlocksModel","readAllSPMTGTINBlocksModel","params","TableName","AWSTables","SPMGTINBlocks","Key","marshall","HashKey","data","AWSDBClient","send","ScanCommand","content","Items","forEach","i","push","unmarshall","error","logger","success","readSPMGTINBlocksById","BlockId","blockId","S","GetItemCommand","console","log","Item","createSPMGTINBlock","blocks","dbBlocks","toString","PutItemCommand","$metadata","updateSPMGTINBlock","block","key","updateExpression","expressionAttributeNames","expressionAttributeValues","blockExplosion","relatedGS1Organization","updateDate","barcodeAssignee","blockExplosionDate","countryCode","ean128Receiver","blockUsedForEAN128Assignment","gtinBlock","blockUsedForGLNAssignment","gs1ContactEmailAddress","parentGLN","createDate","iamBarcodePoolId","comment","adidasGroupContact","ean128Contact","blockPurchaseDate","gtinType","ExpressionAttributeNames","UpdateExpression","ExpressionAttributeValues","ReturnValues","UpdateCommand","deleteSPMGTINBlock","resData","DeleteItemCommand"],"mappings":"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"}